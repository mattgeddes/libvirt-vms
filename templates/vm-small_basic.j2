<domain type='{{ vm.hypervisor }}'>
  <name>{{ vm.name }}</name>
  <uuid>{{ vm.name | to_uuid() }}</uuid>
  <memory unit='KiB'>{{ vm.mem_kb }}</memory>
  <currentMemory unit='KiB'>{{ vm.mem_kb }}</currentMemory>
  <vcpu placement='auto'>{{ vm.vcpus }}</vcpu>
  <os>
    <type arch='x86_64' machine='{{ vm.machine_type }}'>hvm</type>-->
    <boot dev='hd'/>
    <smbios mode='sysinfo'/>
  </os>
  <sysinfo type='smbios'>
      <bios>
	  <entry name='vendor'>{{ vm.bios_vendor }}</entry>
      </bios>
      <system>
	  <entry name='manufacturer'>{{ vm.system_manufacturer }}</entry>
	  <entry name='product'>{{ vm.system_product }}</entry>
	  <entry name='version'>{{ vm.system_version }}</entry>
      </system>
      <baseBoard>
	  <entry name='manufacturer'>{{ vm.board_manufacturer }}</entry>
	  <entry name='product'>{{ vm.board_product }}</entry>
	  <entry name='version'>{{ vm.board_version }}</entry>
	  <entry name='serial'>{{ vm.name | to_uuid() }}</entry>
      </baseBoard>
      <chassis>
	  <entry name='manufacturer'>{{ vm.chassis_manufacturer }}</entry>
	  <entry name='version'>{{ vm.chassis_version }}</entry>
	  <entry name='serial'>{{ vm.name | to_uuid() }}</entry>
	  <entry name='asset'>{{ vm.chassis_name }}</entry>
	  <entry name='sku'>{{ vm.chassis_sku }}</entry>
      </chassis>
      <oemStrings>
	  <entry>oem_vm_owner:{{ vm.owner }}</entry>
	  <entry>oem_vm_host:{{ ansible_hostname }}</entry>
      </oemStrings>
  </sysinfo>
  <features>
    <acpi/>
    <apic/>
  </features>
  <cpu mode='custom' match='exact' check='partial'>
    <model fallback='allow'>SandyBridge-IBRS</model>
    <feature policy='require' name='spec-ctrl'/>
    <feature policy='require' name='ssbd'/>
  </cpu>
  <clock offset='utc'>
    <timer name='rtc' tickpolicy='catchup'/>
    <timer name='pit' tickpolicy='delay'/>
    <timer name='hpet' present='no'/>
  </clock>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>destroy</on_crash>
  <pm>
    <suspend-to-mem enabled='no'/>
    <suspend-to-disk enabled='no'/>
  </pm>
  <devices>
    <emulator>/usr/bin/qemu-system-x86_64</emulator>
    {% for drive in vm.drives %}
    <disk type='{{ vm.drive_type }}' device='{{ vm.drive_device }}'>
	<driver name='{{ vm.drive_driver }}' type='{{ vm.drive_drivertype }}' discard='unmap' detect_zeroes='unmap'/>
	<serial>{{ vm.name }}-{{ drive.vdisk }}</serial>
	<target dev='{{ drive.target }}' bus='{{ vm.drive_bus }}'/>
	<product>{{ vm.drive_product }}</product>
	<vendor>{{ vm.drive_vendor }}</vendor>
	<source file='{{ vdisk_root }}/{{ vm.name }}/{{ drive.vdisk }}.{{ vm.drive_drivertype }}'/>
    </disk>
    {% endfor %}
    {% for nic in vm.nics %}
    <interface type='network'>
      <mac address='{{ nic.ipaddr | ipmac( hypervisor_id ) }}'/>
      <source network='{{ nic.network }}'/>
      <model type='{{ vm.nic_model }}'/>
      <!--<address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/>-->
    </interface>
    {% endfor %}
    <serial type='pty'>
      <target type='isa-serial' port='0'>
        <model name='isa-serial'/>
      </target>
    </serial>
    <console type='pty'>
      <target type='serial' port='0'/>
    </console>
    <graphics type='spice' port="-1" autoport='yes' listen='0.0.0.0'>
      <listen type='address'/>
      <image compression='off'/>
    </graphics>
    <memballoon model='virtio'>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x06' function='0x0'/>
    </memballoon>
  </devices>
  <!-- TODO: add RNG, GPU and watchdog devices -->
</domain>
